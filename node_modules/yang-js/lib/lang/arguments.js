// Generated by CoffeeScript 2.5.1
(function() {
  var P, identifier, optSep;

  P = require('xparse').Parser;

  optSep = P.space.skipMany();

  identifier = P.variable.bind(function(v) {
    return (P.alphanum.orElse(P.oneOf(':.-'))).concat().bind(function(rest) {
      return P.unit(v + rest);
    });
  });

  module.exports = {
    'node-identifier': P.create(function() {
      return identifier;
    }),
    'if-feature-expr': P.create(function() {
      var expr, factor, term;
      expr = function() {
        return P.union.step(term, expr);
      };
      term = function() {
        return P.combine.step(factor, term);
      };
      factor = function() {
        return P.choice(P.negate.bind(function(op) {
          return factor().bind(function(f) {
            return P.wrap(op, f);
          });
        }), P.char('(').bind(function() {
          return optSep.bind(function() {
            return expr().bind(function(e) {
              return optSep.bind(function() {
                return P.char(')').bind(function() {
                  return P.unit(e);
                });
              });
            });
          });
        }), identifier.bind(function(kw) {
          return P.wrap(null, kw);
        }));
      };
      return expr().within(optSep);
    })
  };

}).call(this);
